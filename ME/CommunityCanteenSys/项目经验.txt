1. 【数据库表内容方便管理的方法】
    底层的数据管理，不要有任何约束，所有约束条件交给上层来进行正确性判断和处理

2.【类对象中定义成员经常为指针对象，而非临时对象的原因】
    C++任意对象之间交互，实际上并没有任何约束，只有在类型定义时，存在继承和信息可见性的约束，
    而使用对象交互时，通常将对象定义为指针的形式，将数据定义在堆中，采用指针的特性，可以让对象出现在任意需要使用它的位置

3. 【方便管理的数据表中数据，需要有序展示时的排序规则】
    无约束数据库表数据的排序方法一般有两种，
    1. 按正整数排序，每次插入最大数+1的数字 2. 按时间排序，依赖时间的线性持续增加不可逆的规则【自然】
    两种排序数据的应用场景不同，单纯用于排序不需要排序的数据输出时，使用方法一
    需要排序数据输出时，使用方法二

4. remove(i)将i移除后，将后面的元素填充i位置，因此i位置变换为新元素，
    因此，当i需要被移除且移除后，i不能被移动；i不被移除时，i才能移动